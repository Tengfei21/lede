// This is free software, lisence use MIT.
// Copyright (C) 2019 P3TERX 
// Copyright (C) 2019 KFERMercer 
 

name: OpenWrt-CI 

on:
 push:
 branches: 
 - master
 # schedule:
 # - cron: 0 20 \* \* \*
 # release:
 # types: [published]

jobs:

 build:

 runs-on: ubuntu-latest

 steps:

 - name: Checkout
 uses: actions/checkout@master
 with:
 ref: master

 - name: Space cleanup
 env:
 DEBIAN\_FRONTEND: noninteractive
 run: |
 docker rmi `docker images -q`
 sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
 sudo -E apt-get -y purge azure-cli ghc\* zulu\* hhvm llvm\* firefox google\* dotnet\* powershell openjdk\* mysql\* php\*
 sudo -E apt-get update
 sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
 sudo -E apt-get -y autoremove --purge
 sudo -E apt-get clean

 # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build\_dir/host /mnt/openwrt/build\_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging\_dir
 # ln -s /mnt/openwrt/bin ./bin
 # mkdir -p ./build\_dir/host && ln -s /mnt/openwrt/build\_dir/host ./build\_dir/host
 # mkdir -p ./build\_dir/host && ln -s /mnt/openwrt/build\_dir/hostpkg ./build\_dir/hostpkg
 # ln -s /mnt/openwrt/dl ./dl
 # ln -s /mnt/openwrt/feeds ./feeds
 # ln -s /mnt/openwrt/staging\_dir ./staging\_dir

 df -h

 - name: Update feeds
 run: |
 ./scripts/feeds update -a
 ./scripts/feeds install -a

 - name: Generate configuration file
 run: |
 rm -f ./.config\*
 touch ./.config

 #
 # ========================固件定制部分========================
 # 

 # 
 # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
 # 

 # 以下为定制化固件选项和说明:
 #

 #
 # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
 # 
 # =========================================
 # | # 取消编译VMware镜像: |
 # | cat >> .config <> .config <> .config <> .config <> .config <> .config <> .config <> .config <> .config <> .config <> .config <<EOF
 # # CONFIG\_TARGET\_IMAGES\_PAD is not set
 # # CONFIG\_VMDK\_IMAGES is not set
 # EOF

 # 
 # ========================固件定制部分结束========================
 # 

 sed -i 's/^[ \t]\*//g' ./.config
 make defconfig

 - name: Make download
 run: |
 make download -j8
 find ./dl/ -size -1024c -exec rm -f {} \;
 df -h

 - name: Compile firmware
 run: |
 make -j$(nproc) || make -j1 V=s
 echo "======================="
 echo "Space usage:"
 echo "======================="
 df -h
 echo "======================="
 du -h --max-depth=1 ./ --exclude=build\_dir --exclude=bin
 du -h --max-depth=1 ./build\_dir
 du -h --max-depth=1 ./bin

 - name: Prepare artifact
 run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

 - name: Upload artifact
 uses: actions/upload-artifact@master
 with:
 name: OpenWrt firmware
 path: ./bin/targets/
